{"description":"A bitwhich object represents a boolean filter like a bit object (NAs are not allowed)\nbut uses a sparse representation suitable for very skewed (asymmetric) selections. \nThree extreme cases are represented with logical values, no length via logical(), \nall TRUE with TRUE and all FALSE with FALSE. All other selections are represented with \npositive or negative integers, whatever is shorter. \nThis needs less RAM compared to logical (and often less than bit or which).\nLogical operations are fast if the selection is asymetric (only few or almost all selected).\n","example_call":"bitwhich(maxindex = 0L, x = NULL, xempty = FALSE, poslength = NULL,"}