{"description":"If init is given, Reduce logically adds it to the start\n(when proceeding left to right) or the end of x, respectively.\nIf this possibly augmented vector v has n > 1 elements,\nReduce successively applies f to the elements of v\nfrom left to right or right to left, respectively.  I.e., a left\nreduce computes l_1 = f(v_1, v_2), l_2 = f(l_1, v_3), etc.,\nand returns l_{n-1} = f(l_{n-2}, v_n), and a right reduce does\nr_{n-1} = f(v_{n-1}, v_n), r_{n-2} = f(v_{n-2}, r_{n-1})\nand returns r_1 = f(v_1, r_2).  (E.g., if v is the\nsequence (2, 3, 4) and f is division, left and right reduce give\n(2 / 3) / 4 = 1/6 and 2 / (3 / 4) = 8/3, respectively.)\nIf v has only a single element, this is returned; if there are\nno elements, NULL is returned.  Thus, it is ensured that\nf is always called with 2 arguments.\n","example_call":"Find(f, x, right = FALSE, nomatch = NULL)"}